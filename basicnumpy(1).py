# -*- coding: utf-8 -*-
"""basicNumpy(1).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uPUnnqU_OBikp7oiK_I6n4ewFOgZltyJ
"""

import numpy as np

#일반적으로 어레이를 만드는 방법

test_array = np.array(["1","4",5.0,8], float)
test_array
print(type(test_array))

#스트링으로 선언해도 저장은 float으로 된다
print(type(test_array[1]))

#Python list의 특징

a = [1,2,3,4,5]
b = [5,4,3,2,1]

#변수의 주소값을 저장하는 개념이라 True가 반환된다.

a[0] is b[-1]

#Numpy Array의 특징

a = np.array(a)
b = np.array(b)


#메모리를 각각 할당하여 저장하기 때문에 False 반환
a[0] is b[-1]

#dtype: arrray가 담고있는 데이터의 타입을 반환(data type)
test_array.dtype

#shape: array의 크기와 형태를 반환

a = [[1,2,3],[4,5,6],[7,8,9]]

np.array(a).shape

b = [[[1,2,3],[4,5,6],[7,8,9]],
     [[1,2,3],[4,5,6],[7,8,9]],
     [[1,2,3],[4,5,6],[7,8,9]]]

np.array(b).shape

#ndim: rank를 반환

a = [[1,2,3],[4,5,6],[7,8,9]]
np.array(a).ndim

#size: array안에 데이터 수를 반환

a = [[1,2,3],[4,5,6],[7,8,9]]
np.array(a).size

#nbytes: ndarray object의 메모리 크기를 반환

a = [[1,2,3],[4,5,6],[7,8,9]]
np.array(a).nbytes